/*
 *   Size: 512 x 1
 *   Number of channels: 4
 *   Number of bits per texel: 32 (G_IM_SIZ_32b)
 *   Format of texel: G_IM_FMT_RGBA
 *
 * Example usage:
 *
 *   gsSPTexture (128, 128, 0, G_TX_RENDERTILE, 1),
 *   gsDPPipeSync (),
 *   gsDPSetCombineMode (G_CC_MODULATERGBA, G_CC_MODULATERGBA),
 *   gsDPSetTexturePersp (G_TP_PERSP),
 *   gsDPSetTextureDetail (G_TD_CLAMP),
 *   gsDPSetTextureLOD (G_TL_TILE),
 *   gsDPSetTextureLUT (G_TT_NONE),
 *   gsDPSetTextureFilter (G_TF_BILERP),
 *   gsDPSetTextureConvert(G_TC_FILT),
 *   gsDPLoadTextureBlock (brick, G_IM_FMT_RGBA, G_IM_SIZ_32b, 512, 1, 0
 *     G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR,
 *     G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD),
 */
#include <ultra64.h>

static Gfx brick_C_dummy_aligner1[] = { gsSPEndDisplayList() };
static Gfx brick_C_dummy_aligner2[] = { gsSPEndDisplayList() };

/*******************************************************************/
/* Left lerp mult test */
/* color = walking 1 +/- 1,0   & negs */

u32 bl_tex_llm1[] = {
/* Section 1/3: len=256 */
/*a= */	0x00000000, 0x01010100, 0x02020200, 0x04040400, 0x08080800, 0x10101000, 0x20202000, 0x40404000, 
/*00 */ 0x80808000, 0x03030300, 0x05050500, 0x09090900, 0x11111100, 0x21212100, 0x41414100, 0x81818100, 
	0x07070700, 0x0f0f0f00, 0x1f1f1f00, 0x3f3f3f00, 0x7f7f7f00, 0xffffff00, 0xfefefe00, 0xfcfcfc00, 
	0xf8f8f800, 0xf0f0f000, 0xe0e0e000, 0xc0c0c000, 0xfdfdfd00, 0xfbfbfb00, 0xf7f7f700, 0xefefef00, 
	0xdfdfdf00, 0xbfbfbf00, 
/*a= */	0x00000008, 0x01010108, 0x02020208, 0x04040408, 0x08080808, 0x10101008, 0x20202008, 0x40404008, 
/*01 */ 0x80808008, 0x03030308, 0x05050508, 0x09090908, 0x11111108, 0x21212108, 0x41414108, 0x81818108, 
	0x07070708, 0x0f0f0f08, 0x1f1f1f08, 0x3f3f3f08, 0x7f7f7f08, 0xffffff08, 0xfefefe08, 0xfcfcfc08, 
	0xf8f8f808, 0xf0f0f008, 0xe0e0e008, 0xc0c0c008, 0xfdfdfd08, 0xfbfbfb08, 0xf7f7f708, 0xefefef08, 
	0xdfdfdf08, 0xbfbfbf08, 
/*a= */	0x00000010, 0x01010110, 0x02020210, 0x04040410, 0x08080810, 0x10101010, 0x20202010, 0x40404010, 
/*02 */	0x80808010, 0x03030310, 0x05050510, 0x09090910, 0x11111110, 0x21212110, 0x41414110, 0x81818110, 
	0x07070710, 0x0f0f0f10, 0x1f1f1f10, 0x3f3f3f10, 0x7f7f7f10, 0xffffff10, 0xfefefe10, 0xfcfcfc10, 
	0xf8f8f810, 0xf0f0f010, 0xe0e0e010, 0xc0c0c010, 0xfdfdfd10, 0xfbfbfb10, 0xf7f7f710, 0xefefef10, 
	0xdfdfdf10, 0xbfbfbf10, 
/*a= */	0x00000020, 0x01010120, 0x02020220, 0x04040420, 0x08080820, 0x10101020, 0x20202020, 0x40404020, 
/*04 */	0x80808020, 0x03030320, 0x05050520, 0x09090920, 0x11111120, 0x21212120, 0x41414120, 0x81818120, 
	0x07070720, 0x0f0f0f20, 0x1f1f1f20, 0x3f3f3f20, 0x7f7f7f20, 0xffffff20, 0xfefefe20, 0xfcfcfc20, 
	0xf8f8f820, 0xf0f0f020, 0xe0e0e020, 0xc0c0c020, 0xfdfdfd20, 0xfbfbfb20, 0xf7f7f720, 0xefefef20, 
	0xdfdfdf20, 0xbfbfbf20, 
/*a= */	0x00000040, 0x01010140, 0x02020240, 0x04040440, 0x08080840, 0x10101040, 0x20202040, 0x40404040, 
/*08 */	0x80808040, 0x03030340, 0x05050540, 0x09090940, 0x11111140, 0x21212140, 0x41414140, 0x81818140, 
	0x07070740, 0x0f0f0f40, 0x1f1f1f40, 0x3f3f3f40, 0x7f7f7f40, 0xffffff40, 0xfefefe40, 0xfcfcfc40, 
	0xf8f8f840, 0xf0f0f040, 0xe0e0e040, 0xc0c0c040, 0xfdfdfd40, 0xfbfbfb40, 0xf7f7f740, 0xefefef40, 
	0xdfdfdf40, 0xbfbfbf40, 
/*a= */	0x00000080, 0x01010180, 0x02020280, 0x04040480, 0x08080880, 0x10101080, 0x20202080, 0x40404080, 
/*10 */	0x80808080, 0x03030380, 0x05050580, 0x09090980, 0x11111180, 0x21212180, 0x41414180, 0x81818180, 
	0x07070780, 0x0f0f0f80, 0x1f1f1f80, 0x3f3f3f80, 0x7f7f7f80, 0xffffff80, 0xfefefe80, 0xfcfcfc80, 
	0xf8f8f880, 0xf0f0f080, 0xe0e0e080, 0xc0c0c080, 0xfdfdfd80, 0xfbfbfb80, 0xf7f7f780, 0xefefef80, 
	0xdfdfdf80, 0xbfbfbf80, 
/*a= */	0x00000018, 0x01010118, 0x02020218, 0x04040418, 0x08080818, 0x10101018, 0x20202018, 0x40404018, 
/*03 */	0x80808018, 0x03030318, 0x05050518, 0x09090918, 0x11111118, 0x21212118, 0x41414118, 0x81818118, 
	0x07070718, 0x0f0f0f18, 0x1f1f1f18, 0x3f3f3f18, 0x7f7f7f18, 0xffffff18, 0xfefefe18, 0xfcfcfc18, 
	0xf8f8f818, 0xf0f0f018, 0xe0e0e018, 0xc0c0c018, 0xfdfdfd18, 0xfbfbfb18, 0xf7f7f718, 0xefefef18, 
	0xdfdfdf18, 0xbfbfbf18, 

/*a= */	0x00000028, 0x01010128, 0x02020228, 0x04040428, 0x08080828, 0x10101028, 0x20202028, 0x40404028, 
/*05 */	0x80808028, 0x03030328, 0x05050528, 0x09090928, 0x11111128, 0x21212128, 0x41414128, 0x81818128, 
	0x07070728, 0x0f0f0f28, 
};
u32 bl_tex_llm2[] = {
/* Section 2/3: len=256 */
				0x1f1f1f28, 0x3f3f3f28, 0x7f7f7f28, 0xffffff28, 0xfefefe28, 0xfcfcfc28, 
	0xf8f8f828, 0xf0f0f028, 0xe0e0e028, 0xc0c0c028, 0xfdfdfd28, 0xfbfbfb28, 0xf7f7f728, 0xefefef28, 
	0xdfdfdf28, 0xbfbfbf28, 
/*a= */	0x00000041, 0x01010141, 0x02020241, 0x04040441, 0x08080841, 0x10101041, 0x20202041, 0x40404041, 
/*09 */	0x80808041, 0x03030341, 0x05050541, 0x09090941, 0x11111141, 0x21212141, 0x41414141, 0x81818141, 
	0x07070741, 0x0f0f0f41, 0x1f1f1f41, 0x3f3f3f41, 0x7f7f7f41, 0xffffff41, 0xfefefe41, 0xfcfcfc41, 
	0xf8f8f841, 0xf0f0f041, 0xe0e0e041, 0xc0c0c041, 0xfdfdfd41, 0xfbfbfb41, 0xf7f7f741, 0xefefef41, 
	0xdfdfdf41, 0xbfbfbf41, 
/*a= */	0x00000081, 0x01010181, 0x02020281, 0x04040481, 0x08080881, 0x10101081, 0x20202081, 0x40404081, 
/*11 */	0x80808081, 0x03030381, 0x05050581, 0x09090981, 0x11111181, 0x21212181, 0x41414181, 0x81818181, 
	0x07070781, 0x0f0f0f81, 0x1f1f1f81, 0x3f3f3f81, 0x7f7f7f81, 0xffffff81, 0xfefefe81, 0xfcfcfc81, 
	0xf8f8f881, 0xf0f0f081, 0xe0e0e081, 0xc0c0c081, 0xfdfdfd81, 0xfbfbfb81, 0xf7f7f781, 0xefefef81, 
	0xdfdfdf81, 0xbfbfbf81, 
/*a= */	0x00000031, 0x01010131, 0x02020231, 0x04040431, 0x08080831, 0x10101031, 0x20202031, 0x40404031, 
/*07 */	0x80808031, 0x03030331, 0x05050531, 0x09090931, 0x11111131, 0x21212131, 0x41414131, 0x81818131, 
	0x07070731, 0x0f0f0f31, 0x1f1f1f31, 0x3f3f3f31, 0x7f7f7f31, 0xffffff31, 0xfefefe31, 0xfcfcfc31, 
	0xf8f8f831, 0xf0f0f031, 0xe0e0e031, 0xc0c0c031, 0xfdfdfd31, 0xfbfbfb31, 0xf7f7f731, 0xefefef31, 
	0xdfdfdf31, 0xbfbfbf31, 
/*a= */	0x00000071, 0x01010171, 0x02020271, 0x04040471, 0x08080871, 0x10101071, 0x20202071, 0x40404071, 
/*0f */	0x80808071, 0x03030371, 0x05050571, 0x09090971, 0x11111171, 0x21212171, 0x41414171, 0x81818171, 
	0x07070771, 0x0f0f0f71, 0x1f1f1f71, 0x3f3f3f71, 0x7f7f7f71, 0xffffff71, 0xfefefe71, 0xfcfcfc71, 
	0xf8f8f871, 0xf0f0f071, 0xe0e0e071, 0xc0c0c071, 0xfdfdfd71, 0xfbfbfb71, 0xf7f7f771, 0xefefef71, 
	0xdfdfdf71, 0xbfbfbf71, 
/*a= */	0x000000f1, 0x010101f1, 0x020202f1, 0x040404f1, 0x080808f1, 0x101010f1, 0x202020f1, 0x404040f1, 
/*1f */	0x808080f1, 0x030303f1, 0x050505f1, 0x090909f1, 0x111111f1, 0x212121f1, 0x414141f1, 0x818181f1, 
	0x070707f1, 0x0f0f0ff1, 0x1f1f1ff1, 0x3f3f3ff1, 0x7f7f7ff1, 0xfffffff1, 0xfefefef1, 0xfcfcfcf1, 
	0xf8f8f8f1, 0xf0f0f0f1, 0xe0e0e0f1, 0xc0c0c0f1, 0xfdfdfdf1, 0xfbfbfbf1, 0xf7f7f7f1, 0xefefeff1, 
	0xdfdfdff1, 0xbfbfbff1, 
/*a= */	0x000000f0, 0x010101f0, 0x020202f0, 0x040404f0, 0x080808f0, 0x101010f0, 0x202020f0, 0x404040f0, 
/*1e */	0x808080f0, 0x030303f0, 0x050505f0, 0x090909f0, 0x111111f0, 0x212121f0, 0x414141f0, 0x818181f0, 
	0x070707f0, 0x0f0f0ff0, 0x1f1f1ff0, 0x3f3f3ff0, 0x7f7f7ff0, 0xfffffff0, 0xfefefef0, 0xfcfcfcf0, 
	0xf8f8f8f0, 0xf0f0f0f0, 0xe0e0e0f0, 0xc0c0c0f0, 0xfdfdfdf0, 0xfbfbfbf0, 0xf7f7f7f0, 0xefefeff0, 
	0xdfdfdff0, 0xbfbfbff0, 
/*a= */	0x000000e0, 0x010101e0, 
};
u32 bl_tex_llm3[] = {
/* Section 3/3: len=202 (0xca padded to 0xe0) */
				0x020202e0, 0x040404e0, 0x080808e0, 0x101010e0, 0x202020e0, 0x404040e0, 
/*1c */	0x808080e0, 0x030303e0, 0x050505e0, 0x090909e0, 0x111111e0, 0x212121e0, 0x414141e0, 0x818181e0, 
	0x070707e0, 0x0f0f0fe0, 0x1f1f1fe0, 0x3f3f3fe0, 0x7f7f7fe0, 0xffffffe0, 0xfefefee0, 0xfcfcfce0, 
	0xf8f8f8e0, 0xf0f0f0e0, 0xe0e0e0e0, 0xc0c0c0e0, 0xfdfdfde0, 0xfbfbfbe0, 0xf7f7f7e0, 0xefefefe0, 
	0xdfdfdfe0, 0xbfbfbfe0, 
/*a= */	0x000000c0, 0x010101c0, 0x020202c0, 0x040404c0, 0x080808c0, 0x101010c0, 0x202020c0, 0x404040c0, 
/*18 */	0x808080c0, 0x030303c0, 0x050505c0, 0x090909c0, 0x111111c0, 0x212121c0, 0x414141c0, 0x818181c0, 
	0x070707c0, 0x0f0f0fc0, 0x1f1f1fc0, 0x3f3f3fc0, 0x7f7f7fc0, 0xffffffc0, 0xfefefec0, 0xfcfcfcc0, 
	0xf8f8f8c0, 0xf0f0f0c0, 0xe0e0e0c0, 0xc0c0c0c0, 0xfdfdfdc0, 0xfbfbfbc0, 0xf7f7f7c0, 0xefefefc0, 
	0xdfdfdfc0, 0xbfbfbfc0, 
/*a= */	0x000000e8, 0x010101e8, 0x020202e8, 0x040404e8, 0x080808e8, 0x101010e8, 0x202020e8, 0x404040e8, 
/*1d */	0x808080e8, 0x030303e8, 0x050505e8, 0x090909e8, 0x111111e8, 0x212121e8, 0x414141e8, 0x818181e8, 
	0x070707e8, 0x0f0f0fe8, 0x1f1f1fe8, 0x3f3f3fe8, 0x7f7f7fe8, 0xffffffe8, 0xfefefee8, 0xfcfcfce8, 
	0xf8f8f8e8, 0xf0f0f0e8, 0xe0e0e0e8, 0xc0c0c0e8, 0xfdfdfde8, 0xfbfbfbe8, 0xf7f7f7e8, 0xefefefe8, 
	0xdfdfdfe8, 0xbfbfbfe8, 
/*a= */	0x000000d8, 0x010101d8, 0x020202d8, 0x040404d8, 0x080808d8, 0x101010d8, 0x202020d8, 0x404040d8, 
/*1b */	0x808080d8, 0x030303d8, 0x050505d8, 0x090909d8, 0x111111d8, 0x212121d8, 0x414141d8, 0x818181d8, 
	0x070707d8, 0x0f0f0fd8, 0x1f1f1fd8, 0x3f3f3fd8, 0x7f7f7fd8, 0xffffffd8, 0xfefefed8, 0xfcfcfcd8, 
	0xf8f8f8d8, 0xf0f0f0d8, 0xe0e0e0d8, 0xc0c0c0d8, 0xfdfdfdd8, 0xfbfbfbd8, 0xf7f7f7d8, 0xefefefd8, 
	0xdfdfdfd8, 0xbfbfbfd8, 
/*a= */	0x000000b8, 0x010101b8, 0x020202b8, 0x040404b8, 0x080808b8, 0x101010b8, 0x202020b8, 0x404040b8, 
/*17 */	0x808080b8, 0x030303b8, 0x050505b8, 0x090909b8, 0x111111b8, 0x212121b8, 0x414141b8, 0x818181b8, 
	0x070707b8, 0x0f0f0fb8, 0x1f1f1fb8, 0x3f3f3fb8, 0x7f7f7fb8, 0xffffffb8, 0xfefefeb8, 0xfcfcfcb8, 
	0xf8f8f8b8, 0xf0f0f0b8, 0xe0e0e0b8, 0xc0c0c0b8, 0xfdfdfdb8, 0xfbfbfbb8, 0xf7f7f7b8, 0xefefefb8, 
	0xdfdfdfb8, 0xbfbfbfb8, 
/*a= */	0x000000f0, 0x010101f0, 0x020202f0, 0x040404f0, 0x080808f0, 0x101010f0, 0x202020f0, 0x404040f0, 
/*1e */	0x808080f0, 0x030303f0, 0x050505f0, 0x090909f0, 0x111111f0, 0x212121f0, 0x414141f0, 0x818181f0, 
	0x070707f0, 0x0f0f0ff0, 0x1f1f1ff0, 0x3f3f3ff0, 0x7f7f7ff0, 0xfffffff0, 0xfefefef0, 0xfcfcfcf0, 
	0xf8f8f8f0, 0xf0f0f0f0, 0xe0e0e0f0, 0xc0c0c0f0, 0xfdfdfdf0, 0xfbfbfbf0, 0xf7f7f7f0, 0xefefeff0, 
	0xdfdfdff0, 0xbfbfbff0, 
 0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,
};

/*******************************************************************/
/* alpha adder test */
/* color = walking 1 +/- 1,0   & negs */

/* memory part */
u32 bl_tex_aa1[] = {
	0xff401000, 0xff401020, 0xff401040, 0xff401060, 0xff401080, 0xff4010a0, 0xff4010c0, 0xff4010e0,
};
/* pixel part */
u32 bl_tex_aa2[] = {
	0xffffff00, 0xffffff20, 0xffffff40, 0xffffff60, 0xffffff80, 0xffffffa0, 0xffffffc0, 0xffffffe0,
};

/*******************************************************************/
/* div test */

/* numerator   = pix * (pixa >> 5)  +  mem * (mema >> 5)
 * denominator = pixa >> 5  +  mema >> 5
 */

/* pixel part */
u32 bl_tex_div1[] = {
/*   0/  1 */	0x00000000, 
/*   0/  2 */	0x00000020, 
/*   0/  3 */	0x00000040, 
/*   0/  4 */	0x00000060, 
/*   0/  5 */	0x00000080, 
/*   0/  6 */	0x000000a0, 
/*   0/  7 */	0x000000c0, 
/*   0/  8 */	0x000000e0, 

/*   1/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*   2/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*   3/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*   4/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*   5/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*   7/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*   8/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*   9/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*   f/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*  10/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*  11/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*  1f/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*  20/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*  21/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*  3f/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*  40/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*  41/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*  7f/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*  80/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*  81/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/*  ff/  1 */	0x00000000, 
		0x00000020, 
		0x00000040, 
		0x00000060, 
		0x00000080, 
		0x000000a0, 
		0x000000c0, 
		0x000000e0, 

/* 100/  1 */	0xffffff00, 
		0x60606020, 
		0x30303040, 
		0x20202060, 
		0x18181880,
		0x070707a0, 
		0x101010c0, 
		0x050505e0, 

/* 101/  1 */	0xffffff00, 
		0x60606020, 
		0x30303040, 
		0x20202060, 
		0x18181880, 
		0x070707a0, 
		0x101010c0, 
		0x050505e0, 

/* 1ff/  1 */	0xffffff00, 
		0xffffff20, 
		0xd2d2d240, 
		0x8c8c8c60, 
		0x69696980, 
		0x545454a0, 
		0x464646c0, 
		0x3c3c3ce0, 

/* 200/  1 */	0xffffff00, 
		0xffffff20, 
		0xd2d2d240, 
		0x8c8c8c60, 
		0x69696980, 
		0x545454a0, 
		0x464646c0, 
		0x3c3c3ce0, 

/* 201/  1 */	0xffffff00, 
		0xffffff20, 
		0xd2d2d240, 
		0x8c8c8c60, 
		0x69696980, 
		0x545454a0, 
		0x464646c0, 
		0x3c3c3ce0, 

/* 3ff/  1 */	
		0xc0c0c080, 
		0x9a9a9aa0, 
		0x808080c0,
		0x6e6e6ee0,

/* 3fe/  1 */	
		0xc0c0c080, 
		0x9a9a9aa0, 
		0x808080c0,
		0x6e6e6ee0,

/* 3fd/  1 */
		0xc0c0c080, 
		0x9a9a9aa0, 
		0x808080c0,
		0x6e6e6ee0,

/* 3fc/  1 */
		0xffffff60, 
		0xc0c0c080, 
		0x999999a0, 
		0x808080c0,
		0x6e6e6ee0,

 0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,
};

/* memory part */
u32 bl_tex_div2[] = {
/*   0/  1 */	0x00000000, 
/*   0/  2 */	0x00000000, 
/*   0/  3 */	0x00000000, 
/*   0/  4 */	0x00000000, 
/*   0/  5 */	0x00000000, 
/*   0/  6 */	0x00000000, 
/*   0/  7 */	0x00000000, 
/*   0/  8 */	0x00000000, 

/*   1/  1 */	0x01010100, 
		0x01010100, 
		0x01010100, 
		0x01010100, 
		0x01010100, 
		0x01010100, 
		0x01010100, 
		0x01010100, 

/*   2/  1 */	0x02020200, 
		0x02020200, 
		0x02020200, 
		0x02020200, 
		0x02020200, 
		0x02020200, 
		0x02020200, 
		0x02020200, 

/*   3/  1 */	0x03030300, 
		0x03030300, 
		0x03030300, 
		0x03030300, 
		0x03030300, 
		0x03030300, 
		0x03030300, 
		0x03030300, 

/*   4/  1 */	0x04040400, 
		0x04040400, 
		0x04040400, 
		0x04040400, 
		0x04040400, 
		0x04040400, 
		0x04040400, 
		0x04040400, 

/*   5/  1 */	0x05050500, 
		0x05050500, 
		0x05050500, 
		0x05050500, 
		0x05050500, 
		0x05050500, 
		0x05050500, 
		0x05050500, 

/*   7/  1 */	0x07070700, 
		0x07070700, 
		0x07070700, 
		0x07070700, 
		0x07070700, 
		0x07070700, 
		0x07070700, 
		0x07070700, 

/*   8/  1 */	0x08080800, 
		0x08080800, 
		0x08080800, 
		0x08080800, 
		0x08080800, 
		0x08080800, 
		0x08080800, 
		0x08080800, 

/*   9/  1 */	0x09090900, 
		0x09090900, 
		0x09090900, 
		0x09090900, 
		0x09090900, 
		0x09090900, 
		0x09090900, 
		0x09090900, 

/*   f/  1 */	0x0f0f0f00, 
		0x0f0f0f00, 
		0x0f0f0f00, 
		0x0f0f0f00, 
		0x0f0f0f00, 
		0x0f0f0f00, 
		0x0f0f0f00, 
		0x0f0f0f00, 

/*  10/  1 */	0x10101000, 
		0x10101000, 
		0x10101000, 
		0x10101000, 
		0x10101000, 
		0x10101000, 
		0x10101000, 
		0x10101000, 

/*  11/  1 */	0x11111100, 
		0x11111100, 
		0x11111100, 
		0x11111100, 
		0x11111100, 
		0x11111100, 
		0x11111100, 
		0x11111100, 

/*  1f/  1 */	0x1f1f1f00, 
		0x1f1f1f00, 
		0x1f1f1f00, 
		0x1f1f1f00, 
		0x1f1f1f00, 
		0x1f1f1f00, 
		0x1f1f1f00, 
		0x1f1f1f00, 

/*  20/  1 */	0x20202000, 
		0x20202000, 
		0x20202000, 
		0x20202000, 
		0x20202000, 
		0x20202000, 
		0x20202000, 
		0x20202000, 

/*  21/  1 */	0x21212100, 
		0x21212100, 
		0x21212100, 
		0x21212100, 
		0x21212100, 
		0x21212100, 
		0x21212100, 
		0x21212100, 

/*  3f/  1 */	0x3f3f3f00, 
		0x3f3f3f00, 
		0x3f3f3f00, 
		0x3f3f3f00, 
		0x3f3f3f00, 
		0x3f3f3f00, 
		0x3f3f3f00, 
		0x3f3f3f00, 

/*  40/  1 */	0x40404000, 
		0x40404000, 
		0x40404000, 
		0x40404000, 
		0x40404000, 
		0x40404000, 
		0x40404000, 
		0x40404000, 

/*  41/  1 */	0x41414100, 
		0x41414100, 
		0x41414100, 
		0x41414100, 
		0x41414100, 
		0x41414100, 
		0x41414100, 
		0x41414100, 

/*  7f/  1 */	0x7f7f7f00, 
		0x7f7f7f00, 
		0x7f7f7f00, 
		0x7f7f7f00, 
		0x7f7f7f00, 
		0x7f7f7f00, 
		0x7f7f7f00, 
		0x7f7f7f00, 

/*  80/  1 */	0x80808000, 
		0x80808000, 
		0x80808000, 
		0x80808000, 
		0x80808000, 
		0x80808000, 
		0x80808000, 
		0x80808000, 

/*  81/  1 */	0x81818100, 
		0x81818100, 
		0x81818100, 
		0x81818100, 
		0x81818100, 
		0x81818100, 
		0x81818100, 
		0x81818100, 

/*  ff/  1 */	0xffffff00, 
		0xffffff00, 
		0xffffff00, 
		0xffffff00, 
		0xffffff00, 
		0xffffff00, 
		0xffffff00, 
		0xffffff00, 

/* 100/  1 */	0xa0a0a000, 
		0xa0a0a000, 
		0xa0a0a000, 
		0xa0a0a000, 
		0xa0a0a000, 
		0xdddddd00, 
		0xa0a0a000, 
		0xdddddd00, 

/* 101/  1 */	0xa1a1a100, 
		0xa1a1a100, 
		0xa1a1a100, 
		0xa1a1a100, 
		0xa1a1a100, 
		0xdedede00, 
		0xa1a1a100, 
		0xdedede00, 

/* 1ff/  1 */	0xffffff00, 
		0xffffff20, 
		0x5b5b5b00, 
		0x5b5b5b00, 
		0x5b5b5b00, 
		0x5b5b5b00, 
		0x5b5b5b00, 
		0x5b5b5b00, 

/* 200/  1 */	0x5c5c5c00, 
		0x5c5c5c00, 
		0x5c5c5c00, 
		0x5c5c5c00, 
		0x5c5c5c00, 
		0x5c5c5c00, 
		0x5c5c5c00, 
		0x5c5c5c00, 

/* 201/  1 */	0x5d5d5d00, 
		0x5d5d5d00, 
		0x5d5d5d00, 
		0x5d5d5d00, 
		0x5d5d5d00, 
		0x5d5d5d00, 
		0x5d5d5d00, 
		0x5d5d5d00,  

/* 3ff/  1 */			/* marked 28 */
		0xffffff00, 
		0xfdfdfd00, 
		0xffffff00,
		0xfdfdfd00,

/* 3fe/  1 */	
		0xfefefe00, 
		0xfcfcfc00, 
		0xfefefe00,
		0xfcfcfc00,

/* 3fd/  1 */
		0xfdfdfd00, 
		0xfbfbfb00, 
		0xfdfdfd00,
		0xfbfbfb00,

/* 3fc/  1 */
		0xffffff00, 
		0xfcfcfc00, 
		0xffffff00, 
		0xfcfcfc00,
		0xfafafa00,

 0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,
};

/* pixel part */
u32 bl_tex_div3[] = {
/* 3f8/  1 */
		0xfefefe60,
		0xbfbfbf80,
		0x999999a0,

/* 3f0/  1 */
		0xfbfbfb60,
		0xbdbdbd80,
		0x979797a0,

/* 3e0/  1 */
		0xf6f6f660,
		0xb9b9b980,
		0x949494a0,

/* 3c0/  1 */
		0xebebeb60,
		0xb1b1b180,
		0x8d8d8da0,
		0x767676c0,
		0x656565e0,

/* 3fb/  1 */
		0xffffff60,
		0xbfbfbf80,
		0x999999a0,
		0x808080c0,
		0x6e6e6ee0,

/* 3f7/  1 */
		0xfefefe60,
		0xbebebe80,
		0x989898a0,
		0x7f7f7fc0,
		0x6d6d6de0,

/* 3ef/  1 */
		0xfbfbfb60,
		0xbcbcbc80,
		0x979797a0,
		0x7e7e7ec0,
		0x6c6c6ce0,

/* 3df/  1 */
		0xf6f6f660,
		0xb8b8b880,
		0x949494a0,
		0x7b7b7bc0,
		0x6a6a6ae0,

/* 3bf/  1 */
		0xebebeb60,
		0xb0b0b080,
		0x8d8d8da0,
		0x767676c0,
		0x656565e0,

/* 37f/  1 */
		0xd6d6d660,
		0xa0a0a080,
		0x808080a0,
		0x6b6b6bc0,
		0x5c5c5ce0,

/* 2ff/  1 */
		0xababab60,
		0x80808080,
		0x676767a0,
		0x565656c0,
		0x4a4a4ae0,

/* 380/  1 */
		0xd6d6d660,
		0xa1a1a180,
		0x818181a0,
		0x6b6b6bc0,
		0x5c5c5ce0,

/* 300/  1 */
		0xababab60,
		0x81818180,
		0x676767a0,
		0x565656c0,
		0x4a4a4ae0,

			/* marked ==8 (+3) */
/* ADD 0+1 p*/	0xffffff00,
/* ADD 1+1 p*/	0xffffff20,
/* ADD 2+1 p*/	0xffffff40,
/* ADD 3+1 p*/	0xffffff60,
/* ADD 4+1 p*/	0xffffff80,
/* ADD 5+1 p*/	0xffffffa0,
/* ADD 6+1 p*/	0xffffffc0,
/* ADD 0+2 p*/	0xffffff00,
/* ADD 1+2 p*/	0xffffff20,
/* ADD 2+2 p*/	0xffffff40,
/* ADD 3+2 p*/	0xffffff60,
/* ADD 4+2 p*/	0xffffff80,
/* ADD 4+2 p*/	0xffffffa0,
/* ADD 0+3 p*/	0xffffff00,
/* ADD 1+3 p*/	0xffffff20,
/* ADD 2+3 p*/	0xffffff40,
/* ADD 3+3 p*/	0xffffff60,
/* ADD 3+3 p*/	0xffffff80,
/* ADD 0+4 p*/	0xffffff00,
/* ADD 1+4 p*/	0xffffff20,
/* ADD 2+4 p*/	0xffffff40,
/* ADD 3+4 p*/	0xffffff60,
/* ADD 0+5 p*/	0xffffff00,
/* ADD 1+5 p*/	0xffffff20,
/* ADD 2+5 p*/	0xffffff40,
/* ADD 0+6 p*/	0xffffff00,
/* ADD 1+6 p*/	0xffffff20,
/* ADD 0+7 p*/	0xffffff00,

 0,0,0,0,0,0,0,0,0,
};

/* memory part */
u32 bl_tex_div4[] = {
/* 3f8/  1 */
		0xfefefe00,
		0xfcfcfc00,
		0xfbfbfb00,

/* 3f0/  1 */
		0xffffff00,
		0xfcfcfc00,
		0xfdfdfd00,

/* 3e0/  1 */
		0xfefefe00,
		0xfcfcfc00,
		0xfcfcfc00,

/* 3c0/  1 */
		0xffffff00,
		0xfcfcfc00,
		0xffffff00,
		0xfcfcfc00,
		0xfdfdfd00,

/* 3fb/  1 */
		0xfefefe00,
		0xffffff00,
		0xfefefe00,
		0xfbfbfb00,
		0xf9f9f900,

/* 3f7/  1 */
		0xfdfdfd00,
		0xffffff00,
		0xffffff00,
		0xfdfdfd00,
		0xfcfcfc00,

/* 3ef/  1 */
		0xfefefe00,
		0xffffff00,
		0xfcfcfc00,
		0xfbfbfb00,
		0xfbfbfb00,

/* 3df/  1 */
		0xfdfdfd00,
		0xffffff00,
		0xfbfbfb00,
		0xfdfdfd00,
		0xf9f9f900,

/* 3bf/  1 */
		0xfefefe00,
		0xffffff00,
		0xfefefe00,
		0xfbfbfb00,
		0xfcfcfc00,

/* 37f/  1 */
		0xfdfdfd00,
		0xffffff00,
		0xffffff00,
		0xfdfdfd00,
		0xfbfbfb00,

/* 2ff/  1 */
		0xfefefe00,
		0xffffff00,
		0xfcfcfc00,
		0xfbfbfb00,
		0xf9f9f900,

/* 380/  1 */
		0xfefefe00,
		0xfcfcfc00,
		0xfbfbfb00,
		0xfefefe00,
		0xfcfcfc00,

/* 300/  1 */
		0xffffff00,
		0xfcfcfc00,
		0xfdfdfd00,
		0xfcfcfc00,
		0xfafafa00,



			/* marked ==8 (+3) */
/* ADD 0+1 m*/	0xfefefe20,
/* ADD 1+1 m*/	0xfefefe20,
/* ADD 2+1 m*/	0xfefefe20,
/* ADD 3+1 m*/	0xfefefe20,
/* ADD 4+1 m*/	0xfefefe20,
/* ADD 5+1 m*/	0xfefefe20,
/* ADD 6+1 m*/	0xfefefe20,
/* ADD 0+2 m*/	0xfefefe40,
/* ADD 1+2 m*/	0xfefefe40,
/* ADD 2+2 m*/	0xfefefe40,
/* ADD 3+2 m*/	0xfefefe40,
/* ADD 4+2 m*/	0xfefefe40,
/* ADD 4+2 m*/	0xfefefe40,
/* ADD 0+3 m*/	0xfefefe60,
/* ADD 1+3 m*/	0xfefefe60,
/* ADD 2+3 m*/	0xfefefe60,
/* ADD 3+3 m*/	0xfefefe60,
/* ADD 3+3 m*/	0xfefefe60,
/* ADD 0+4 m*/	0xfefefe80,
/* ADD 1+4 m*/	0xfefefe80,
/* ADD 2+4 m*/	0xfefefe80,
/* ADD 3+4 m*/	0xfefefe80,
/* ADD 0+5 m*/	0xfefefea0,
/* ADD 1+5 m*/	0xfefefea0,
/* ADD 2+5 m*/	0xfefefea0,
/* ADD 0+6 m*/	0xfefefec0,
/* ADD 1+6 m*/	0xfefefec0,
/* ADD 0+7 m*/	0xfefefee0,

 0,0,0,0,0,0,0,0,0,
};
